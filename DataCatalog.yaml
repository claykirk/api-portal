---
openapi: 3.0.0
info:
  title: DataCatalog
  description: An API for managing and querying items within the Data Catalog.
  version: 1.0.0
paths:
  /api/v1/datacatalog/query:
    get:
      summary: Query data catalog with query params.  Added to summary
      description: Queries the data catalog, using query params to form the search
        query.  Query params may include createdAt or expiresAt.
      parameters:
      - name: createdAt
        in: query
        description: Time when referenced Data Set was created within the data lake.
        schema:
          type: string
      - name: expiresAt
        in: query
        description: Time when Data Set within the data lake expires.
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataCatalogItem'
        400:
          description: Bad Request
          content:
            application/json: {}
        401:
          description: Unauthorized
          content:
            application/json: {}
        403:
          description: Forbidden
          content:
            application/json: {}
    servers:
    - url: http://localhost:3000/cloud/data-catalog
      description: Local Node server
    parameters:
    - name: expiresAt
      in: query
      description: Time when Data Set within the data lake expires.
      schema:
        type: string
    - name: createdAt
      in: query
      description: Time when referenced Data Set was created within the data lake.
      schema:
        type: string
  /api/v1/datacatalog/items:
    summary: This is the api endpoint to fetch data catalog items
    get:
      summary: Get data catalog items.
      description: Retrieves all data catalog items visible to the authenticated user.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataCatalogItem'
        401:
          description: Unauthorized
          content:
            application/json: {}
        403:
          description: Forbidden
          content:
            application/json: {}
    post:
      summary: Create data catalog item.
      description: Creates a new data catalog item associated with a specific tenant
        and data set.
      requestBody:
        description: Data Catalog item
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DataCatalogItem'
            examples:
              POSTsource:
                value: |-
                  [
                      {
                          "path": "some text",
                          "metadata": {},
                          "tenantId": "some text",
                          "expiresAt": "2018-02-10T09:30Z",
                          "dataSourceId": "some text",
                          "dataSetId": "some text",
                          "createdAt": "2018-02-10T09:30Z"
                      },
                      {
                          "path": "some text",
                          "metadata": {},
                          "tenantId": "some text",
                          "expiresAt": "2018-02-10T09:30Z",
                          "dataSourceId": "some text",
                          "dataSetId": "some text",
                          "createdAt": "2018-02-10T09:30Z"
                      }
                  ]
        required: true
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCatalogItem'
        400:
          description: Bad Request
          content:
            application/json: {}
        401:
          description: Unauthorized
          content:
            application/json: {}
        403:
          description: Forbidden
          content:
            application/json: {}
    servers:
    - url: http://localhost:3000/cloud/data-catalog
      description: Local Node server
  /api/v1/datacatalog/items/{itemId}/:
    get:
      summary: Get a data catalog item.
      description: Retrieves the data catalog entry specified by itemId.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCatalogItem'
        401:
          description: Unauthorized
          content:
            application/json: {}
        403:
          description: Forbidden
          content:
            application/json: {}
        404:
          description: Not Found
          content:
            application/json: {}
    put:
      summary: Update a data catalog item.
      description: Updates the data catalog entry specified by itemId.
      requestBody:
        description: Data Catalog item
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataCatalogItem'
            examples:
              PUTitem:
                description: Update an existing Data Catalog item
                value: |-
                  {
                    "_id": "5bdb5ae12d1dd1000127c994",
                    "tenantId": "81b3853c-b8a0-4e5d-808a-cbfc23bd5e13",
                    "dataSourceId": "5bdb5a41e4fe99273729670f",
                    "dataSetId": "5bdb5a40af185c7e50981ced",
                    "path": "/an/artifact/path",
                    "createdAt": "2018-11-01T19:55:45.000+0000",
                    "metadata": {
                      "testProp": "testing123",
                      "fake": "data"
                    }
                  }
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCatalogItem'
        400:
          description: Bad Request
          content:
            application/json: {}
        401:
          description: Unauthorized
          content:
            application/json: {}
        403:
          description: Forbidden
          content:
            application/json: {}
        404:
          description: Not Found
          content:
            application/json: {}
    delete:
      summary: Delete a data catalog item.
      description: Deletes the data catalog entry specified by itemId.
      parameters:
      - name: itemId
        in: path
        description: The unique identifier assigned to a data catalog item.
        required: true
        schema:
          type: string
      responses:
        204:
          description: Success
          content:
            application/json: {}
        401:
          description: Unauthorized
          content:
            application/json: {}
        403:
          description: Forbidden
          content:
            application/json: {}
        404:
          description: Not Found
          content:
            application/json: {}
    servers:
    - url: http://localhost:3000/cloud/data-catalog
      description: Local Node server
    parameters:
    - name: itemId
      in: path
      description: The unique identifier assigned to a data catalog item.
      required: true
      schema:
        type: string
components:
  schemas:
    DataCatalogItem:
      required:
      - path
      - tenantId
      - dataSourceId
      - dataSetId
      - createdAt
      properties:
        path:
          description: The path locator of the actual data set.
          type: string
        metadata:
          description: A map of name/value pairs specifying required and optional
            metadata about the data set.
        tenantId:
          description: The unique identifer assigned to the tenant which owns the
            Data Set.
          type: string
        expiresAt:
          format: date-time
          description: Time when Data Set within the data lake expires.
          type: string
        dataSourceId:
          description: The unique identifier assigned to the associated Data Source.
          type: string
        dataSetId:
          description: The unique identifier assigned to the Data Set upon creation.
          type: string
        createdAt:
          format: date-time
          description: Time when referenced Data Set was created within the data lake.
          type: string
